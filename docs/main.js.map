{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ɵɵclassMap } from '@angular/core';\nimport { interval, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  apiKey_: string = 'yrQCRzHx7vDSvo7ygZCCax1ZeZ07b4pV';\n\n  set apiKey(key: string) {\n    this.apiKey_ = key;\n    this.setObservables();\n  }\n\n  get apiKey(): string {\n    return this.apiKey_;\n  }\n  title = 'enes100';\n\n  isHardwareConnected: Observable<boolean>;\n  peopleCount: Observable<string>;\n\n  hardwareConnectionError: string;\n  peopleCountError: string;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.setObservables();\n  }\n\n  setObservables(): void {\n    console.log('resetting observables');\n    this.isHardwareConnected = this.http.get(`http://blynk-cloud.com/${this.apiKey}/isHardwareConnected`).pipe(\n      map(response => {\n        this.hardwareConnectionError = undefined;\n        return response as any as boolean;\n      }),\n      catchError(_ => {\n        this.hardwareConnectionError = 'Bad request (hardware connection) - check api key';\n        return of(false);\n      })\n    );\n    this.peopleCount = this.isHardwareConnected.pipe(\n      switchMap((response) => {\n        if (response) {\n          return interval(1000).pipe(\n            switchMap(_ => {\n              return this.http.get(`http://blynk-cloud.com/${this.apiKey}/get/V0`).pipe(\n                map(count => {\n                  console.log('received');\n                  this.peopleCountError = undefined;\n                  return count as unknown as string;\n                }),\n                catchError(_ => {\n                  this.peopleCountError = 'Bad request (people count)';\n                  return of('0');\n                })\n              );\n            })\n          );\n        } else {\n          return of('unknown');\n        }\n      })\n    );\n  }\n}\n","<!-- Image and text -->\n<nav class=\"navbar navbar-light bg-light mb-5\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">\n      ENES100 Room Count\n    </a>\n  </div>\n</nav>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div *ngIf=\"hardwareConnectionError\" class=\"alert alert-danger\" role=\"alert\">\n        {{hardwareConnectionError}}\n      </div>\n      <div *ngIf=\"peopleCountError\" class=\"alert alert-danger\" role=\"alert\">\n        {{peopleCountError}}\n      </div>\n      <div class=\"card w-100\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title d-flex justify-content-between\">Room 1 <span\n              *ngIf=\"isHardwareConnected | async; else notConnected\" class=\"badge bg-success\">Connected</span></h5>\n          <div class=\"input-group mb-3\">\n            <span class=\"input-group-text\" id=\"basic-addon1\">API Key</span>\n            <input [(ngModel)]=\"apiKey\" type=\"text\" class=\"form-control\" placeholder=\"yrQCRzHx7vDSvo7ygZCCax1ZeZ07b4pV\"\n              aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n          </div>\n          <p class=\"card-text\">Current Count: {{peopleCount | async}}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #notConnected>\n  <span class=\"badge bg-danger ml-auto\">Not Connected</span>\n</ng-template>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}